.number-random {
  --animation-random-duration: 0.5s;
  .number {
    display: inline-block;
    &:after {
      content: '0';
      //counter-reset: count 0;
      font-size: 20px;
    }
  }
  @for $i from 1 to 10 {
    .number:nth-of-type(#{$i}):after {
      @if ($i%2 == 0) {
        animation: counterAni var(--animation-random-duration) linear infinite alternate-reverse;
      } @else {
        animation: counterAni var(--animation-random-duration) linear infinite alternate;
      }
    }
  }
}

@keyframes counterAni {
  0% {
    content: '0';
  }
  10% {
    content: '1';
  }
  20% {
    content: '2';
  }
  30% {
    content: '3';
  }
  40% {
    content: '4';
  }
  50% {
    content: '5';
  }
  60% {
    content: '6';
  }
  70% {
    content: '7';
  }
  80% {
    content: '8';
  }
  90% {
    content: '9';
  }
  100% {
    content: '0';
  }
}

.number-random[data-random='type2'] {
  --animation-random-duration: 0.4s;
  > * {
    vertical-align: middle;
  }
  .number {
    overflow: hidden;
    display: inline-block;
    position: relative;
    font-size: 20px;
    line-height: 1;
    color: transparent;
    &:before {
      // content: counter(count);
      // counter-reset: count 0;
      content: '0';
      font-size: 20px;
      color: $base-txt-color;
      position: absolute;
      line-height: 1;
      left: 0;
    }
    &:after {
      // content: counter(count2);
      // counter-reset: count2 0;
      content: '0';
      font-size: 20px;
      color: $base-txt-color;
      position: absolute;
      left: 0;
      line-height: 1;
      transform: translateY(100%);
    }
  }
  .action &,
  &.active {
    @for $i from 1 to 10 {
      .number:nth-of-type(#{$i}) {
        &:before {
          @if ($i%2 == 0) {
            animation: numberRandomBeforeReverse var(--animation-random-duration) linear infinite both, numberRandomBeforeCount calc(var(--animation-random-duration) * 10) linear infinite both;
          } @else {
            animation: numberRandomBefore var(--animation-random-duration) linear infinite both, numberRandomBeforeCount calc(var(--animation-random-duration) * 10) linear infinite both;
          }
        }
        &:after {
          @if ($i%2 == 0) {
            animation: numberRandomAfterReverse var(--animation-random-duration) linear infinite both, numberRandomAfterCount calc(var(--animation-random-duration) * 10) linear calc(var(--animation-random-duration) / 2) infinite both;
          } @else {
            animation: numberRandomAfter var(--animation-random-duration) linear infinite both, numberRandomAfterCount calc(var(--animation-random-duration) * 10) linear calc(var(--animation-random-duration) / 2) infinite both;
          }
        }
      }
    }
  }
}
@keyframes numberRandomBefore {
  0% {
    transform: translateY(0%);
  }
  50% {
    transform: translateY(-100%);
  }
  50.1% {
    transform: translateY(100%);
  }
}
@keyframes numberRandomBeforeReverse {
  0% {
    transform: translateY(0%);
  }
  50% {
    transform: translateY(100%);
  }
  50.1% {
    transform: translateY(-100%);
  }
}
@keyframes numberRandomBeforeCount {
  0%,
  50%,
  100% {
    content: '0';
  }
  10%,
  60% {
    content: '2';
  }
  20%,
  70% {
    content: '4';
  }
  30%,
  80% {
    content: '6';
  }
  40%,
  90% {
    content: '8';
  }
}

@keyframes numberRandomAfter {
  0% {
    transform: translateY(100%);
  }
  50% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(-100%);
  }
}
@keyframes numberRandomAfterReverse {
  0% {
    transform: translateY(-100%);
  }
  50% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(100%);
  }
}
@keyframes numberRandomAfterCount {
  0%,
  50%,
  100% {
    content: '1';
  }
  10%,
  60% {
    content: '3';
  }
  20%,
  70% {
    content: '5';
  }
  30%,
  80% {
    content: '7';
  }
  40%,
  90% {
    content: '9';
  }
}

/* splitting */
.splitting {
  /* The center word index */
  --word-center: calc((var(--word-total) - 1) / 2);
  /* The center character index */
  --char-center: calc((var(--char-total) - 1) / 2);
  /* The center character index */
  --line-center: calc((var(--line-total) - 1) / 2);

  .word,
  .char {
    display: inline-block;
    vertical-align: top;
  }
  .char {
    position: relative;
    &:before,
    &:after {
      content: attr(data-char);
      position: absolute;
      top: 0;
      left: 0;
      visibility: hidden;
      transition: inherit;
      user-select: none;
    }
  }

  .word {
    /* Pecent (0-1) of the word's position */
    --word-percent: calc(var(--word-index) / var(--word-total));
    /* Pecent (0-1) of the line's position */
    --line-percent: calc(var(--line-index) / var(--line-total));
  }

  .char {
    /* Percent (0-1) of the char's position */
    --char-percent: calc(var(--char-index) / var(--char-total));
    /* Offset from center, positive & negative */
    --char-offset: calc(var(--char-index) - var(--char-center));
    /* Absolute distance from center, only positive */
    --distance: calc((var(--char-offset) * var(--char-offset)) / var(--char-center));
    /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
    --distance-sine: calc(var(--char-offset) / var(--char-center));
    /* Distance from center where 1 is far left/far right, 0 is center */
    --distance-percent: calc((var(--distance) / var(--char-center)));
  }
}
[data-splitting][data-animation] {
  opacity: 0;
}

// prettier-ignore
$splits: 
  'active' 'splitting-fade' 1 150, 
  'on' 'splitting-highlight' 1 150,
  'spl-up' 'splitting-up' 1 150,
  'spl-down' 'splitting-down' 1 150,
  'spl-left' 'splitting-left' 1 150,
  'spl-right' 'splitting-right' 1 150,
  'spl-hidden-up' 'splitting-hidden-up' 0.75 100,
  'spl-hidden-down' 'splitting-hidden-down' 0.75 100,
  'spl-hidden-left' 'splitting-hidden-left' 0.75 100,
  'spl-hidden-right' 'splitting-hidden-right' 0.75 100,
  'spl-size-up' 'splitting-size-up' 1 150,
  'spl-size-down' 'splitting-size-down' 1 150,
  'spl-rotate-up' 'splitting-rotate-up' 1 60,
  'spl-rotate-down' 'splitting-rotate-down' 1 60
;
@each $class, $ani, $duration, $delay in $splits {
  [data-splitting] {
    &[data-animation='#{$class}'],
    .swiper-slide &.#{$class} {
      @if ($class == 'on') {
        opacity: 1;
      }
      @if ($class == 'spl-hidden-up' or $class == 'spl-hidden-down') {
        .word {
          overflow: hidden;
        }
        .char {
          animation-duration: 0s;
          animation-delay: 0s;
        }
      }
    }
    &[data-animation='#{$class}'].#{$class},
    .swiper-slide-active &.#{$class} {
      @if ($class != 'on') {
        opacity: 1;
      }
      .char {
        @if ($class == 'spl-hidden-left' or $class == 'spl-hidden-right') {
          overflow: hidden;
          visibility: hidden;
          &:after {
            visibility: visible;
            animation: #{$ani} #{$duration}s cubic-bezier(0.5, 0, 0.5, 1) backwards;
            animation-delay: calc(#{$delay}ms * var(--char-index));
          }
        } @else {
          // @if ($class == 'spl-size-up' or $class == 'spl-size-down') {
          //   filter: blur(0);
          // }
          animation: #{$ani} #{$duration}s cubic-bezier(0.5, 0, 0.5, 1) backwards;
          animation-delay: calc(#{$delay}ms * var(--char-index));
          @if ($class == 'on') {
            animation-iteration-count: 2;
          }
        }
      }
    }
  }
}

@keyframes splitting-fade {
  from {
    opacity: 0;
  }
}
@keyframes splitting-highlight {
  50% {
    color: var(--spl-highlight-color);
  }
}
@keyframes splitting-up {
  from {
    transform: translateY(50%);
    opacity: 0;
  }
}
@keyframes splitting-down {
  from {
    transform: translateY(-50%);
    opacity: 0;
  }
}
@keyframes splitting-left {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
}
@keyframes splitting-right {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
}
@keyframes splitting-hidden-up {
  from {
    transform: translateY(110%);
    opacity: 0;
  }
}
@keyframes splitting-hidden-down {
  from {
    transform: translateY(-110%);
    opacity: 0;
  }
}
@keyframes splitting-hidden-left {
  from {
    transform: translateX(110%);
    opacity: 0;
  }
}
@keyframes splitting-hidden-right {
  from {
    transform: translateX(-110%);
    opacity: 0;
  }
}
@keyframes splitting-size-up {
  from {
    transform: scale(0.3);
    opacity: 0;
    filter: blur(2px);
  }
}
@keyframes splitting-size-down {
  from {
    transform: scale(2);
    opacity: 0;
    filter: blur(2px);
  }
}
@keyframes splitting-rotate-up {
  from {
    transform: translateY(1em) rotate(0.5turn) scale(0.5);
    opacity: 0;
  }
}
@keyframes splitting-rotate-down {
  from {
    transform: translateY(-1em) rotate(-0.5turn) scale(0.5);
    opacity: 0;
  }
}

// add animated.4.1.1.css
@keyframes fadeInIcon {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }

  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
.animate__fadeInIcon {
  animation-name: fadeInIcon;
}
@keyframes fadeInUp2 {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.animate__fadeInUp2 {
  animation-name: fadeInUp2;
}
@keyframes fadeInDown2 {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.animate__fadeInDown2 {
  animation-name: fadeInDown2;
}
@keyframes fadeInLeft2 {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}
.animate__fadeInLeft2 {
  animation-name: fadeInLeft2;
}
@keyframes fadeInRight2 {
  from {
    opacity: 0;
    -webkit-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}
.animate__fadeInRight2 {
  animation-name: fadeInRight2;
}
@keyframes bounce2 {
  from,
  20%,
  53%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0);
  }

  40%,
  43% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -10px, 0) scaleY(1.1);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -5px, 0) scaleY(1.05);
  }

  80% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0) scaleY(0.95);
  }

  90% {
    transform: translate3d(0, -2px, 0) scaleY(1.02);
  }
}
.animate__bounce2 {
  animation-name: bounce2;
  transform-origin: center bottom;
}
@keyframes zoomIn2 {
  from {
    opacity: 0;
    transform: scale3d(0.8, 0.8, 0.8);
  }

  50% {
    opacity: 1;
  }
}
.animate__zoomIn2 {
  -webkit-animation-name: zoomIn2;
  animation-name: zoomIn2;
}
