@use 'sass:math';

//checkbox, radio
input[type='checkbox'],
input[type='radio'] {
  margin: 0;
}

.radio,
.checkbox {
  position: relative;
  display: inline-block;
  min-width: $chk-size;
  min-height: $chk-size;
  vertical-align: middle;
  margin-right: 30px;
  &.block {
    display: block;
    margin-right: 0;
    + .block {
      &.radio,
      &.checkbox {
        margin-top: 18px;
      }
    }
  }
  &:last-child {
    margin-right: 0;
  }
  > input {
    position: absolute;
    left: 0;
    top: 0;
    width: $chk-size;
    height: $chk-size;
    opacity: 0;
    margin: 0;
    z-index: 2;
    &:not(:disabled) {
      cursor: pointer;
    }
    &:disabled {
      ~ i {
        background-color: $chk-disabled-color;
      }
    }
  }
  > i {
    position: absolute;
    left: 0;
    top: 0;
    display: inline-block;
    width: $chk-size;
    height: $chk-size;
    border: 1px solid $chk-line-color;
    background-color: $white-color;
    box-sizing: border-box;
    vertical-align: top;
    transition: 0.3s;
    z-index: 1;
    &:after {
      content: '';
      display: block;
      position: absolute;
      left: 0;
      top: 0;
    }
    + .lbl {
      margin-left: $chk-size;
      padding-left: 10px;
    }
  }
  > .lbl {
    position: relative;
    display: block;
    font-size: 16px;
    line-height: $chk-size - 2px;
    padding: 1px 0;
    &:first-child {
      margin-right: $chk-size;
      padding-right: 8px;
      ~ input,
      ~ i {
        left: auto;
        right: 0;
      }
    }
    @include class-begins('i-ico-') {
      vertical-align: top;
      margin-top: 4px;
    }
  }
  &.ty2 {
    > input {
      ~ i {
        border-color: $chk-checked-color;
      }
      &:checked {
        ~ i {
          background-color: $chk-checked-color;
        }
      }
      &:disabled {
        ~ i {
          border-color: $line-color;
        }
        &:checked ~ i {
          border-width: 0;
          background-color: $chk-checked-disabled-color;
        }
      }
    }
  }
  &.large:not(.btn):not(.switch):not(.switch2) {
    min-width: $chk-lg-size;
    min-height: $chk-lg-size;
    > input {
      width: $chk-lg-size;
      height: $chk-lg-size;
    }
    > i {
      width: $chk-lg-size;
      height: $chk-lg-size;
      + .lbl {
        margin-left: $chk-lg-size;
        padding-left: 14px;
      }
    }
    > .lbl {
      font-size: 20px;
      line-height: $chk-lg-size - 4px;
      padding: 2px 0;
      &:first-child {
        padding-right: 14px;
        margin-right: $chk-lg-size;
      }
    }
  }
  &.small:not(.btn):not(.switch):not(.switch2) {
    min-width: $chk-sm-size;
    min-height: $chk-sm-size;
    > input {
      width: $chk-sm-size;
      height: $chk-sm-size;
    }
    > i {
      width: $chk-sm-size;
      height: $chk-sm-size;
      + .lbl {
        margin-left: $chk-sm-size;
        padding-left: 6px;
      }
    }
    > .lbl {
      font-size: 14px;
      line-height: $chk-sm-size;
      padding: 0;
      &:first-child {
        padding-right: 6px;
        margin-right: $chk-sm-size;
      }
    }
  }
  &.btn {
    margin-right: 0;
    > input {
      width: 100%;
      height: 100%;
      cursor: pointer;
      &:disabled ~ .lbl {
        opacity: 1;
        background-color: $chk-disabled-color;
      }
      &:checked ~ .lbl {
        border-color: $chk-btn-checked-color;
        background-color: $chk-btn-checked-color;
        color: $white-color;
        .btn-wrap.group & {
          border-color: to-light($chk-btn-checked-color, 40);
        }
      }
      &:checked:disabled ~ .lbl {
        color: rgba($white-color, 0.6);
        &:after {
          opacity: 0.6;
        }
      }
      &:checked:not(:disabled) ~ .lbl {
        z-index: 1;
      }
    }
    > i {
      display: none;
    }
    .lbl {
      position: relative;
      display: flex;
      width: 100%;
      height: $button-height;
      line-height: inherit;
      padding: 0 10px;
      text-align: center;
      font-size: inherit;
      white-space: normal;
      text-decoration: none;
      overflow: hidden;
      box-sizing: border-box;
      border-radius: $button-radius;
      justify-content: center;
      align-items: center;
      font-weight: 500;
      vertical-align: middle;
      margin: 0;
      border: 1px solid $line-color;
      transition: 0.3s;
      font-size: $button-font-size;
      background-color: $white-color;
      color: $gray-color4;
      appearance: none;
    }

    &.small {
      .lbl {
        height: $button-sm-height;
        font-size: $button-sm-font-size;
        font-weight: normal;
      }
    }

    &.ty2 {
      .lbl {
        height: auto;
        min-height: 48px;
        line-height: 1.2;
        padding: 10px 16px;
        text-align: left;
        justify-content: flex-start;
      }
    }

    + .btn {
      margin-top: 0;
      margin-left: $item-margin-x;
    }

    .tg-btn-wrap & {
      > input {
        &:checked:disabled ~ .lbl {
          color: rgba($white-color, 0.6);
          &:after {
            opacity: 0.6;
          }
        }
        // &:checked:not(:disabled) ~ .lbl {
        //   color: $chk-checked-color;
        // }
      }
      .lbl {
        height: 44px;
        font-size: 14px;
        border-color: $chk-line-color;
      }
    }
  }

  // 안드로이드 타입
  &.switch {
    min-width: $switch-width;
    min-height: $switch-height;
    margin: 0;
    > input {
      width: 100%;
      height: 100%;
      &:checked {
        ~ i {
          background: none;
          &:before {
            background: $primary-color;
            opacity: 0.4;
          }
          &:after {
            left: 15px;
            animation: none;
            background: $primary-color;
          }
        }
        ~ .lbl {
          .off {
            display: none;
          }
        }
      }
      &:not(:checked) {
        ~ .lbl {
          .on {
            display: none;
          }
        }
      }
    }
    > i {
      min-width: $switch-width;
      height: $switch-height;
      padding: $switch-padding;
      border: 0 none;
      border-radius: 0;
      &:before {
        content: '';
        display: block;
        height: $switch-height - ($switch-padding * 2);
        border-radius: $switch-height - $switch-padding;
        background-color: $switch-bg-color;
        opacity: 1;
        transition: 0.3s ease;
      }
      &:after {
        width: $switch-height;
        height: $switch-height;
        margin: 0;
        border: 0 none;
        left: 0;
        top: 0;
        border-radius: 50%;
        background: $line-color;
        box-shadow: 0 0 1px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.237602);
        transition: 0.3s ease;
        transform: none;
      }
      + .lbl {
        margin-left: $switch-width;
      }
    }
    .lbl {
      padding-top: 0;
      padding-bottom: 0;
      line-height: $switch-height;
      &:first-child {
        margin-right: $switch-width;
      }
    }
  }

  // 아이폰 타입
  &.switch2 {
    min-width: $switch2-width;
    min-height: $switch2-height;
    margin: 0;
    > input {
      width: 100%;
      height: 100%;
      // top:0;
      &:checked {
        ~ i {
          background: $primary-color;
          &:after {
            left: $switch2-width - $switch2-height + $switch2-padding;
            background: $white-color;
            animation: none;
          }
        }
        ~ .lbl {
          .off {
            display: none;
          }
        }
      }
      &:not(:checked) {
        ~ .lbl {
          .on {
            display: none;
          }
        }
      }
    }
    > i {
      width: $switch2-width;
      height: $switch2-height;
      border: 0 none;
      border-radius: math.div($switch2-height, 2);
      background-color: $switch2-bg-color;
      transition: background 0.3s ease;
      overflow: hidden;
      &:after {
        width: $switch2-height - ($switch2-padding * 2);
        height: $switch2-height - ($switch2-padding * 2);
        margin: 0;
        border: 0 none;
        left: $switch2-padding;
        top: $switch2-padding;
        border-radius: 50%;
        background-color: $white-color;
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15), 0 3px 1px rgba(0, 0, 0, 0.06);
        transition: left 0.3s ease;
        transform: none;
      }
    }
    .lbl {
      // padding-top: $switch2-padding * 2;
      // padding-bottom: $switch2-padding * 2;
      // line-height: $switch2-height - ($switch2-padding * 4);
      padding-top: 0;
      padding-bottom: 0;
      padding-left: 6px;
      margin-left: $switch2-width;
      line-height: $switch2-height;
      font-size: 14px;
      color: $gray-color;
      &:first-child {
        padding-left: 0;
        padding-right: 6px;
        margin-left: 0;
        margin-right: $switch2-width;
      }
    }
    &.in-txt {
      min-width: $switch2-ty2-width;
      > input {
        &:checked {
          ~ i {
            &:before {
              content: attr(data-on);
              padding-right: 0;
              padding-left: 2px;
              padding-right: $switch2-height - $switch2-padding;
              color: $white-color;
            }
            &:after {
              left: $switch2-ty2-width - $switch2-height + $switch2-padding;
            }
          }
        }
      }
      > i {
        width: $switch2-ty2-width;
        &:before {
          content: attr(data-off);
          display: flex;
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          padding-right: 2px;
          line-height: $switch2-height;
          justify-content: center;
          align-items: center;
          font-size: 10px;
          padding-left: $switch2-height - $switch2-padding;
          box-sizing: border-box;
          color: $gray-color;
          transition: 0.2s;
        }
      }
      .lbl {
        margin-left: $switch2-ty2-width;
        &:first-child {
          margin-left: 0;
          margin-right: $switch2-ty2-width;
        }
      }
    }
    /* 큰모드 */
    /*
    &.large {
      $switch2-width: 7.50px;
      $switch2-height: 3.10px;

      min-width: $switch2-lg-width;
      min-height: $switch2-lg-height;
      > input {
        &:checked {
          ~ i {
            &:after {
              left: $switch2-lg-width - $switch2-lg-height + $switch2-padding;
            }
          }
        }
      }
      > i {
        width: $switch2-lg-width;
        height: $switch2-lg-height;
        border-radius: math.div($switch2-lg-height, 2);
        &:after {
          width: $switch2-lg-height - ($switch2-padding * 2);
          height: $switch2-lg-height - ($switch2-padding * 2);
        }
      }
      .lbl {
        margin-left: $switch2-lg-width;
        line-height: $switch2-lg-height;
        &:first-child {
          margin-left: 0;
          margin-right: $switch2-lg-width;
        }
      }

      &.in-txt {
        i {
          &:before,
          &:after {
            font-size: 12px;
          }
        }
      }
    }
    */
  }

  .lbl-child {
    padding: 20px 0 10px;
    margin: 0 20px;
    border: 0 solid $line-color;
    border-bottom-width: 1px;
    font-size: 14px;
    line-height: 20px;
  }
}
.checkbox {
  > i {
    border-radius: 2px;
    &:after {
      width: 100%;
      height: 100%;
      // @include ico-check('229,229,229');
      @include bg-etc(95% auto);
    }
  }
  > input {
    &:checked {
      ~ i {
        &:after {
          @include ico-check;
          animation: chkeckboxAni 0.25s linear;
        }
      }
      &:disabled {
        ~ i {
          &:after {
            @include ico-check($chk-checked-disabled-color-rgb);
          }
        }
      }
    }
  }

  &.ty2 {
    > input {
      &:checked {
        ~ i {
          &:after {
            @include ico-check('255,255,255');
          }
        }
      }
    }
    .lbl {
      &:first-child {
        padding-right: 0 !important;
      }
    }
  }

  &.btn {
    .lbl {
      &:after {
        @include after-append(20px, 20px);
        margin-left: 6px;
        @include ico-check('183,183,183');
      }
    }
    > input:checked ~ .lbl {
      &:after {
        @include ico-check('255,255,255');
      }
    }
  }
}
.radio {
  > i {
    border-radius: 50%;
    &:after {
      left: 50%;
      top: 50%;
      border-radius: 50%;
      // background-color: $chk-color);
      width: $rdo-size;
      height: $rdo-size;
      margin: (math.div($rdo-size, 2) * -1) 0 0 (math.div($rdo-size, 2) * -1);
    }
  }
  > input {
    &:checked ~ i {
      border-color: $chk-checked-color;
      border-width: 2px;
      &:after {
        background-color: $chk-checked-color;
        animation: radioAni 0.25s linear forwards;
      }
    }
    &:disabled {
      // + i:after {
      //   background-color: $line-color;
      // }
      &:checked ~ i {
        border-color: $chk-checked-disabled-color;
        &:after {
          background-color: $chk-checked-disabled-color;
        }
      }
    }
  }
  &.ty2 {
    > input {
      &:checked + i:after {
        background-color: $white-color;
      }
    }
  }
  &.large:not(.btn):not(.switch):not(.switch2) {
    > i {
      &:after {
        width: $rdo-lg-size;
        height: $rdo-lg-size;
        margin: (math.div($rdo-lg-size, 2) * -1) 0 0 (math.div($rdo-lg-size, 2) * -1);
      }
    }
  }
  &.small:not(.btn):not(.switch):not(.switch2) {
    > i {
      &:after {
        width: $rdo-sm-size;
        height: $rdo-sm-size;
        margin: (math.div($rdo-sm-size, 2) * -1) 0 0 (math.div($rdo-sm-size, 2) * -1);
      }
    }
  }
}
@keyframes chkeckboxAni {
  0% {
    clip: rect(0, 0, 24px, 0);
  }
  100% {
    clip: rect(0, 24px, 24px, 0);
  }
}
@keyframes radioAni {
  0% {
    transform: scale(0);
  }
  60% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}
.chk-item {
  + .chk-item {
    margin-top: $item-margin-y;
  }
  > .checkbox,
  > .radio {
    display: block;
    margin-right: 0;
    z-index: 1;
    > input,
    > i {
      left: 20px;
      top: 50%;
      margin-top: -12px;
    }
    > .lbl {
      border-radius: 12px;
      background-color: $bg-color;
      padding: 14px 20px 14px 54px;
      margin-left: 0;
      line-height: 22px;
      font-size: 16px;
      font-weight: 500;
      border: 1px solid $line-color3;
      transition: border 0.3s;
    }
    > input:checked ~ .lbl {
      border-color: $chk-checked-color;
    }
    + .lbl-child {
      border-top-width: 0;
      margin-top: -12px;
      padding-top: 32px;
      border-radius: 0 0 12px 12px;
    }
  }
  .lbl-child {
    padding: 20px;
    border: 1px solid $line-color;

    font-size: 14px;
    line-height: 20px;
  }
  .btn {
    display: flex;
    align-items: center;
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    padding-right: 20px;
  }

  &.in-btn {
    > .checkbox,
    > .radio {
      .lbl {
        padding-right: 50px;
      }
    }
  }
  &.folding {
    > .checkbox,
    > .radio {
      > .lbl {
        padding-right: 52px;
      }
      .ui-folding-btn {
        display: flex;
        align-items: center;
        position: absolute;
        right: 0;
        top: 0;
        height: 100%;
        padding-right: 20px;
      }
    }
  }
  .folding-panel {
    display: none;
  }
}
.chk-wrap {
  display: flex;
  flex-shrink: 0;
  // padding: 8px 0;
  .radio,
  .checkbox {
    margin-top: 4px;
    margin-bottom: 4px;
  }

  &.list-ty {
    display: block;
    padding: 18px 20px;
    border: 1px solid $line-color;
    border-width: 1px 0;
    .radio,
    .checkbox {
      display: block;
      margin: 0;
      + .radio,
      + .checkbox {
        margin-top: 14px;
      }
    }
  }
  &.ty-2 {
    flex-direction: column;
    height: 170px;
    padding: 15px 20px;
    border: 1px solid $line-color4;
    border-radius: 6px;
    box-sizing: border-box;
    overflow-y: auto;
    .radio,
    .checkbox {
      margin-top: 5px;
      margin-bottom: 5px;
      margin-right: 0;
    }
  }
}
.btn-wrap-grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 12px;
  .button {
    width: 100%;
    padding-left: 3px;
    padding-right: 3px;
  }
  .checkbox,
  .radio {
    &.btn {
      margin-left: 0;
      margin-right: 0;
    }
  }
}

.chk-table-list {
  border: 1px solid $line-color4;
  padding: 10px;
  // overflow: hidden auto;
  overflow-x: hidden;
  overflow-y: auto;
  height: 166px;
  border-radius: 6px;
}
.chk-table-item {
  display: flex;
  align-items: center;
  word-break: break-all;
  line-height: 1.2;
  padding: 3px 9px 3px 13px;
  &:is(label) {
    cursor: pointer;
  }
  > .name {
    width: 200px;
    flex-shrink: 0;
    &:before {
      content: '';
      display: inline-block;
      width: 3px;
      height: 3px;
      background-color: $base-txt-color;
      border-radius: 50%;
      margin-right: 10px;
      vertical-align: 4px;
    }
  }
  > .part {
    flex: 1 1 auto;
  }
  > .position,
  > .level {
    width: 115px;
    flex-shrink: 0;
    text-align: center;
  }
  > .chk {
    flex-shrink: 0;
  }
  &.checked {
    background-color: $bg-color4;
  }
}
