@use 'sass:math';

html {
  height: 100%;
  // font-size: 62.5%;
  text-size-adjust: none;
}
body {
  font: normal 16px/1.4 'Noto Sans KR', sans-serif;
  color: $base-txt-color;
  letter-spacing: -0.02em;
  word-break: keep-all;
  -webkit-font-smoothing: antialiased;
  // html.is-app & {
  //   overscroll-behavior-y: contain; // 당겨서 새로고침 막기
  // }
}

html.pc {
  ::-webkit-scrollbar-track {
    background: to-dark(#fff, 5);
    box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.1);
  }
  ::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 10px;
    box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2);
    &:hover {
      background: rgba(0, 0, 0, 0.6);
    }
  }
  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    background: rgba(0, 0, 0, 0);
  }
}

/* bg-color */
.bg-primary {
  background-color: $primary-color !important;
}
.bg-white,
.bg-fff {
  background-color: #fff !important;
}
.bg-black,
.bg-000 {
  background-color: #000 !important;
}

/*color*/
.a-link {
  color: $primary-color;
  text-decoration: underline;
}
.fc-base {
  color: $base-txt-color !important;
}
.fc-primary {
  color: $primary-color !important;
}
.fc-red {
  color: $red-color !important;
}
.fc-red2 {
  color: $red-color2 !important;
}
.fc-yellow {
  color: $yellow-color2 !important;
}
.fc-blue {
  color: $blue-color !important;
}
.fc-skyblue {
  color: $skyblue-color !important;
}
.fc-lightblue {
  color: $lightblue-color !important;
}
.fc-keyword {
  color: $red-color !important;
}
.fc-white,
.fc-fff {
  color: $white-color !important;
}
.fc-gray {
  color: $gray-color !important;
}
.fc-gray2 {
  color: $gray-color !important;
}
.fc-gray3 {
  color: $gray-color3 !important;
}
.fc-gray4 {
  color: $gray-color4 !important;
}
.fc-gray5 {
  color: $gray-color5 !important;
}

/* 폰트 사이즈 */
@for $i from 0 through 60 {
  .fz-#{$i} {
    font-size: $i * 1px !important;
  }
  .lh-#{$i} {
    line-height: $i * 1px !important;
  }
}

/* 굵기 */
.fw-bold {
  font-weight: bold !important;
}
.fw-medium {
  font-weight: 500 !important;
}
.fw-normal,
.fw-regular {
  font-weight: normal !important;
}
@for $i from 1 through 9 {
  .fw-#{$i}00 {
    font-weight: $i * 100 !important;
  }
}

/* 정렬 */
.t-right {
  text-align: right !important;
}
.t-left {
  text-align: left !important;
}
.t-center {
  text-align: center !important;
}
.va-top {
  vertical-align: top !important;
}
.va-middle {
  vertical-align: middle !important;
}
.va-bottom {
  vertical-align: bottom !important;
}
.f-left {
  float: left;
}
.f-right {
  float: right;
}
.clear {
  clear: both;
}

/* flex */
.inline-flex {
  display: inline-flex !important;
}
.align-start {
  align-items: flex-start !important;
}
.align-center {
  align-items: center !important;
}
.align-end {
  align-items: flex-end !important;
}
.justify-start {
  justify-content: flex-start !important;
}
.justify-center {
  justify-content: center !important;
}
.justify-end {
  justify-content: flex-end !important;
}
.space-between {
  justify-content: space-between !important;
}
.space-around {
  justify-content: space-around !important;
}
.space-evenly {
  justify-content: space-evenly !important;
}
.align-self-start {
  align-self: flex-start !important;
}
.align-self-center {
  align-self: center !important;
}
.align-self-end {
  align-self: flex-end !important;
}
.justify-self-start {
  justify-self: flex-start !important;
}
.justify-self-center {
  justify-self: center !important;
}
.justify-self-end {
  justify-self: flex-end !important;
}
.justify-stretch {
  justify-items: stretch !important;
}
.flex-11 {
  flex: 1 1 auto !important;
}
.flex-10 {
  flex: 1 0 auto !important;
}
.flex-01 {
  flex: 0 1 auto !important;
}
.flex-00 {
  flex: 0 0 auto !important;
}
.flex-wrap {
  flex-flow: wrap !important;
}
.shrink-0 {
  flex-shrink: 0 !important;
}
.flex-column {
  flex-direction: column !important;
  &.flex > div + div {
    margin-left: 0;
    margin-top: $item-margin-y;
  }
}
.flex {
  display: flex;
  & + .flex:not(.swiper-slide) {
    margin-top: $item-margin-y;
  }
  > * + * {
    margin-left: $item-margin-x;
  }
  &.full {
    > *:not(.unit):not(i) {
      width: 100%;
    }
    @include class-begins('w-', '>') {
      flex-grow: 0;
      flex-shrink: 0;
    }
  }

  > .unit {
    display: flex;
    width: auto;
    align-items: center;
    font-size: 15px;
    padding: 0 2px;
  }

  > .button {
    padding-left: 5px;
    padding-right: 5px;
    // flex: 1 1 auto;
    // width: auto !important;
  }
}
.overflow-hidden {
  overflow: hidden !important;
}
.overflow-visible {
  overflow: visible !important;
}
.overflow-auto {
  overflow: auto !important;
}
.overflow-x-hidden {
  overflow-x: hidden !important;
}
.overflow-x-auto {
  overflow-x: auto !important;
}
.overflow-y-hidden {
  overflow-y: hidden !important;
}
.overflow-y-auto {
  overflow-y: auto !important;
}

// div:table
.tbl {
  display: table;
  width: 100%;
  .th,
  .td {
    display: table-cell;
  }
}

// width, height
.w-auto {
  width: auto !important;
}
.h-auto {
  height: auto !important;
}
@for $i from 0 through 300 {
  .w-#{$i} {
    width: $i * 1px !important;
  }
  .w-#{$i}f {
    flex: 0 0 $i * 1px !important;
  }
  .h-#{$i} {
    height: $i * 1px !important;
  }
}
@for $i from 1 through 40 {
  .w-#{($i * 5) + 300} {
    width: ($i * 5) + 300 * 1px !important;
  }
  .w-#{($i * 5) + 300}f {
    flex: 0 0 ($i * 5) + 300 * 1px !important;
  }
  .h-#{($i * 5) + 300} {
    height: ($i * 5) + 300 * 1px !important;
  }
}
@for $i from 1 through 50 {
  .w-#{($i * 10) + 500} {
    width: ($i * 10) + 500 * 1px !important;
  }
  .w-#{($i * 10) + 500}f {
    flex: 0 0 ($i * 10) + 500 * 1px !important;
  }
  .h-#{($i * 10) + 500} {
    height: ($i * 10) + 500 * 1px !important;
  }
}
@for $i from 1 through 20 {
  .w-#{($i * 100) + 1000} {
    width: ($i * 100) + 1000 * 1px !important;
  }
  .w-#{($i * 10) + 1000}f {
    flex: 0 0 ($i * 100) + 1000 * 1px !important;
  }
  .h-#{($i * 100) + 1000} {
    height: ($i * 100) + 1000 * 1px !important;
  }
}
@for $i from 0 through 100 {
  @if $i !=33 and $i !=66 {
    .w-#{$i}p {
      width: $i * 1% !important;
    }
    .w-#{$i}vw {
      width: $i * 1vw !important;
    }
    .w-#{$i}fp {
      flex: 0 0 $i * 1% !important;
    }
    .h-#{$i}p {
      height: $i * 1% !important;
    }
    .h-#{$i}vh {
      height: -vh(#{$i}) !important;
    }
  }
}
.w-33p {
  width: 33.3333% !important;
}
.w-66p {
  width: 66.6666% !important;
}
.w-33vw {
  width: 33.3333vw !important;
}
.w-66vw {
  width: 66.6666vw !important;
}
.w-33fp {
  flex: 0 0 33.3333% !important;
}
.w-66fp {
  flex: 0 0 66.6666% !important;
}
.h-33p {
  height: 33.3333% !important;
}
.h-66p {
  height: 66.6666% !important;
}
.h-33vh {
  height: -vh(33.3333) !important;
}
.h-66vh {
  height: -vh(66.6666) !important;
}

// margin
.mg-auto {
  margin: auto !important;
}
.mg-auto-x {
  margin-left: auto !important;
  margin-right: auto !important;
}
.mg-auto-y {
  margin-top: auto !important;
  margin-bottom: auto !important;
}
.ml-auto {
  margin-left: auto !important;
}
.mr-auto {
  margin-right: auto !important;
}
.mt-auto {
  margin-top: auto !important;
}
.mb-auto {
  margin-bottom: auto !important;
}
@for $i from 0 through 100 {
  .mg-#{$i} {
    margin: $i * 1px !important;
  }
  .mg-#{$i}-x {
    margin-left: $i * 1px !important;
    margin-right: $i * 1px !important;
  }
  .mg-#{$i}-y {
    margin-top: $i * 1px !important;
    margin-bottom: $i * 1px !important;
  }
  .mt-#{$i} {
    margin-top: $i * 1px !important;
  }
  .mb-#{$i} {
    margin-bottom: $i * 1px !important;
  }
  .ml-#{$i} {
    margin-left: $i * 1px !important;
  }
  .mr-#{$i} {
    margin-right: $i * 1px !important;
  }
}
@for $i from 1 through 20 {
  .mg-#{$i*5 + 100} {
    margin: $i * 5px + 100px !important;
  }
  .mg-#{$i*5 + 100}-x {
    margin-left: $i * 5px + 100px !important;
    margin-right: $i * 5px + 100px !important;
  }
  .mg-#{$i*5 + 100}-y {
    margin-top: $i * 5px + 100px !important;
    margin-bottom: $i * 5px + 100px !important;
  }
  .mt-#{$i*5 + 100} {
    margin-top: $i * 5px + 100px !important;
  }
  .mb-#{$i*5 + 100} {
    margin-bottom: $i * 5px + 100px !important;
  }
  .ml-#{$i*5 + 100} {
    margin-left: $i * 5px + 100px !important;
  }
  .mr-#{$i*5 + 100} {
    margin-right: $i * 5px + 100px !important;
  }
}
@for $i from 1 through 30 {
  .mt--#{$i} {
    margin-top: -$i * 1px !important;
  }
  .mb--#{$i} {
    margin-bottom: -$i * 1px !important;
  }
  .ml--#{$i} {
    margin-left: -$i * 1px !important;
  }
  .mr--#{$i} {
    margin-right: -$i * 1px !important;
  }
}

// padding
@for $i from 0 through 100 {
  .pd-#{$i} {
    padding: $i * 1px !important;
  }
  .pd-#{$i}-x {
    padding-left: $i * 1px !important;
    padding-right: $i * 1px !important;
  }
  .pd-#{$i}-y {
    padding-top: $i * 1px !important;
    padding-bottom: $i * 1px !important;
  }
  .pt-#{$i} {
    padding-top: $i * 1px !important;
  }
  .pb-#{$i} {
    padding-bottom: $i * 1px !important;
  }
  .pl-#{$i} {
    padding-left: $i * 1px !important;
  }
  .pr-#{$i} {
    padding-right: $i * 1px !important;
  }
}
@for $i from 1 through 20 {
  .pd-#{$i*5 + 100} {
    padding: $i * 5px + 100px !important;
  }
  .pd-#{$i*5 + 100}-x {
    padding-left: $i * 5px + 100px !important;
    padding-right: $i * 5px + 100px !important;
  }
  .pd-#{$i*5 + 100}-y {
    padding-top: $i * 5px + 100px !important;
    padding-bottom: $i * 5px + 100px !important;
  }
  .pt-#{$i*5 + 100} {
    padding-top: $i * 5px + 100px !important;
  }
  .pb-#{$i*5 + 100} {
    padding-bottom: $i * 5px + 100px !important;
  }
  .pl-#{$i*5 + 100} {
    padding-left: $i * 5px + 100px !important;
  }
  .pr-#{$i*5 + 100} {
    padding-right: $i * 5px + 100px !important;
  }
}

// 글자 말줄임
.ellipsis {
  @include ellipsis;
}
@for $i from 1 through 5 {
  .ellipsis-#{$i} {
    @include ellipsis($i);
  }
}

// border
.bd-none {
  border: none !important;
}
.bd-l-none {
  border-left: none !important;
}
.bd-r-none {
  border-right: none !important;
}
.bd-t-none {
  border-top: none !important;
}
.bd-b-none {
  border-bottom: none !important;
}
@for $i from 0 through 10 {
  .bd-#{$i} {
    border-width: $i * 1px !important;
  }
  .bd-l-#{$i} {
    border-left-width: $i * 1px !important;
  }
  .bd-r-#{$i} {
    border-right-width: $i * 1px !important;
  }
  .bd-t-#{$i} {
    border-top-width: $i * 1px !important;
  }
  .bd-b-#{$i} {
    border-bottom-width: $i * 1px !important;
  }
}
@for $i from 0 through 30 {
  .bd-radius-#{$i} {
    border-radius: $i * 1px !important;
  }
}

$bdTypes: (solid, dashed, dotted);
@each $bdType in $bdTypes {
  .bd-#{$bdType} {
    border-style: #{$bdType};
  }
  .bd-top-#{$bdType} {
    border-top-style: #{$bdType};
  }
  .bd-bottom-#{$bdType} {
    border-bottom-style: #{$bdType};
  }
  .bd-left-#{$bdType} {
    border-left-style: #{$bdType};
  }
  .bd-right-#{$bdType} {
    border-right-style: #{$bdType};
  }
}

// opacity
.op-0 {
  opacity: 0 !important;
  pointer-events: none;
}
@for $i from 1 through 20 {
  .op-#{$i*5} {
    opacity: $i * 0.05 !important;
  }
}

// filter
.blur img,
img.blur {
  filter: blur(6px);
}
.grayscale img,
img.grayscale {
  filter: grayscale(1);
}

// etc
.lottie {
  svg {
    vertical-align: top;
  }
}
.scroll-x {
  @include scroll-x;
}
.scroll-y {
  @include scroll-y;
}
.block {
  display: block !important;
}
.inline-block {
  display: inline-block !important;
}
.hide {
  display: none !important;
  &.show {
    display: block !important;
  }
}
.blind {
  position: absolute;
  overflow: hidden;
  width: 0;
  height: 0;
  @include text-blind;
}
.break-all {
  word-break: break-all !important;
}
.keep-all {
  word-break: keep-all !important;
}
.line-through {
  text-decoration: line-through !important;
}
.line-underline {
  text-decoration: underline !important;
}
.nowrap {
  white-space: nowrap !important;
}
.white-normal {
  white-space: normal !important;
}
.underline {
  text-decoration: underline !important;
}
.pre-line {
  white-space: pre-line !important;
}
.pre-line-wrap {
  display: block;
  white-space: pre-line;
}
.pre-wrap {
  white-space: pre-wrap;
}
.pointer {
  cursor: pointer !important;
}
.table-fixed {
  table-layout: fixed !important;
}
.dummy {
  background-color: #ccc;
  padding: 4em 1em;
  text-align: center;
  font-size: 22px;
}
.console {
  position: fixed;
  padding: 10px;
  line-height: 2;
  font-size: 15px;
  top: 0;
  left: 0;
  width: 100%;
  color: $white-color;
  text-align: center;
  box-sizing: border-box;
  background: rgba(255, 0, 0, 0.7);
  z-index: 1000;
  word-break: break-all;
}
.pointer-events-none {
  pointer-events: none;
}
.pointer-events-auto {
  pointer-events: auto;
}

// skeleton
.skeleton-wrap {
  pointer-events: none;
  position: relative;
  overflow: hidden;
  &:after {
    content: '';
    display: block;
    position: absolute;
    left: -50%;
    top: 0;
    width: 200%;
    height: 100%;
    background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.5) 40% 60%, rgba(255, 255, 255, 0) 100%);
    background-size: 100px 100%;
    background-position: 0 0;
    background-repeat: no-repeat;
    transform: skewX(-12deg);
    animation: skeleton-ef 2s linear infinite;
  }
}
.skeleton-txt {
  pointer-events: none;
  cursor: pointer;
  color: transparent !important;
  word-break: break-all !important;
  background: linear-gradient(to bottom, transparent 0% 25%, #f1f1f1 25% 75%, transparent 75% 100%);
  * {
    opacity: 0 !important;
  }
}
.skeleton-bg {
  pointer-events: none;
  cursor: pointer;
  color: transparent !important;
  border-color: transparent !important;
  background-color: transparent !important;
  word-break: break-all !important;
  background-color: #f1f1f1 !important;
  * {
    opacity: 0 !important;
  }
  @for $i from 2 through 5 {
    &:nth-child(#{$i}) {
      animation-delay: ($i - 1) * 300ms;
    }
  }
}
@keyframes skeleton-ef {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 100% 0;
  }
}
.top-sticky {
  position: sticky !important;
  top: $page-title-fixed-height;
}
